# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
      - run: npm ci

      - name: Bump version and commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          # npm versionでバージョンをインクリメント
          npm version patch --no-git-tag-version

          # 変更をコミットしてプッシュ
          git add package.json package-lock.json
          git commit -m "version auto increment"
          git push origin master

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - name: Publish package
        run: |
          if npx can-npm-publish --verbose; then
            echo "CAN_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "CAN_PUBLISH=false" >> $GITHUB_ENV
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Publish package
        if: env.CAN_PUBLISH == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Get current package.json version
        run: |
          echo "CURRENT_VERSION=$(jq --raw-output .version package.json)" >> $GITHUB_ENV
